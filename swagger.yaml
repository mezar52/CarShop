openapi: 3.0.0
info:
  title: BooksAPI
  version: 1.0.0

paths:
  /api/api-token-auth/:
    post:
      summary: Create user token
      requestBody:
        required: true
        content:
          application/json:
            example:
              username: name
              password: password

      responses:
        '201':
          description: A successful response
          content:
            application/json:
              example:
                - id: 1
                  car_type: 1
                  color: "SomeColor"
                  "year": 2024
                  "image": "https://example.s3.amazonaws.com"


  /api/cars-api:
    get:
      summary: Get a list of cars
      parameters:
        - in: query
          name: limit
          required: false
          description: The number of items to return
          schema:
            type: integer
        - in: query
          name: offset
          required: false
          description: The offset from the beginning of the result set
          schema:
            type: integer
      responses:
        '200':
          description: A successful response
          content:
            application/json:
              example:
                - id: 1
                  car_type: 1
                  color: "SomeColor"
                  "year": 2024
                  "image": "https://example.s3.amazonaws.com"
                  "car_type_details": {
                    "id": 1,
                    "name": SomeName,
                    "brand": SomeBrand,
                    "price": 10000
                  }

                - id: 2
                  car_type: 1
                  color: "SomeColor"
                  "year": 2024
                  "image": "https://example.s3.amazonaws.com"
                  "car_type_details": {
                    "id": 1,
                    "name": SomeName,
                    "brand": SomeBrand,
                    "price": 10000
                  }
        '405':
          description: Incorrect method
        '500':
          description: Internal Server Error

    post:
      summary: Create new car
      requestBody:
        required: true
        content:
          application/json:
            example:
              - id: 1
                car_type: 1
                color: "SomeColor"
                "year": 2024
                "image": "https://example.s3.amazonaws.com"

      responses:
        '201':
          description: A successful response
          content:
            application/json:
              example:
                - id: 1
                  car_type: 1
                  color: "SomeColor"
                  "year": 2024
                  "image": "https://example.s3.amazonaws.com"
        '400':
          description: Bad Request
          content:
            application/json:
              example:
                message: "Request body must be JSON or All fields are required"


  /api/cars-api/{pk}:
    get:
      summary: Get car
      responses:
        '200':
          description: A successful response
          content:
            application/json:
              example:
                - id: 1
                  car_type: 1
                  color: "SomeColor"
                  "year": 2024
                  "image": "https://example.s3.amazonaws.com"
        '404':
          description: Car not found
          content:
            application/json:
              example:
                message: "Not found"
        '405':
          description: Incorrect method
        '500':
          description: Internal Server Error

    put:
      summary: Car data update
      parameters:
        - name: pk
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            example:
              - id: 1
                car_type: 2
                color: "NewColor"
                "year": 2025
                "image": "https://example.s3.amazonaws.com"

      responses:
        "200":
          description: A successful response
          content:
            application/json:
              example:
                - id: 1
                  car_type: 2
                  color: "NewColor"
                  "year": 2025
                  "image": "https://example.s3.amazonaws.com"
        '400':
          description: Bad Request
          content:
            application/json:
              example:
                message: "Request body must be JSON or All fields are required"
        '404':
          description: Car not found
          content:
            application/json:
              example:
                message: "Not found"

  /api/dealers-api:
    get:
      summary: Get a list of dealers
      parameters:
        - in: query
          name: limit
          required: false
          description: The number of items to return
          schema:
            type: integer
        - in: query
          name: offset
          required: false
          description: The offset from the beginning of the result set
          schema:
            type: integer
      responses:
        '200':
          description: A successful response
          content:
            application/json:
              example:
                - id: 1
                  name: SomeDealerName
                  available_car_types: [ 1 ]

    post:
      summary: Create new dealer
      requestBody:
        required: true
        content:
          application/json:
            example:
              - id: 2
                name: NewDealer
                available_car_types: [ 2 ]

      responses:
        "201":
          description: A successful response
          content:
            application/json:
              example:
                - id: 2
                  name: NewDealer
                  available_car_types: [ 2 ]
        '400':
          description: Bad Request
          content:
            application/json:
              example:
                message: "Request body must be JSON or All fields are required"

  /api/dealers-api/{pk}:
    get:
      summary: Get dealer
      responses:
        '200':
          description: A successful response
          content:
            application/json:
              example:
                - id: 2
                  name: NewDealer
                  available_car_types: [ 2 ]
        '404':
          description: Car not found
          content:
            application/json:
              example:
                message: "Not found"
        '405':
          description: Incorrect method
        '500':
          description: Internal Server Error

  /types-api:
    get:
      summary: Get a list of car types
      responses:
        '200':
          description: A successful response
          content:
            application/json:
              example:
                - id: 1
                  name: SomeTypeCar
                  brand: SomeBrand
                  price: 70000

    post:
      summary: Create new car type
      requestBody:
        required: true
        content:
          application/json:
            example:
              - id: 2
                name: NewCarType
                brand: NewBrand
                price: 90000

      responses:
        "201":
          description: A successful response
          content:
            application/json:
              example:
                - id: 2
                  name: NewCarType
                  brand: NewBrand
                  price: 90000
        '400':
          description: Bad Request
          content:
            application/json:
              example:
                message: "Request body must be JSON or All fields are required"

  /api/types-api/{pk}:
    get:
      summary: Get car type
      responses:
        '200':
          description: A successful response
          content:
            application/json:
              example:
                - id: 1
                  name: SomeTypeCar
                  brand: SomeBrand
                  price: 70000
        '404':
          description: Car not found
          content:
            application/json:
              example:
                message: "Not found"
        '405':
          description: Incorrect method
        '500':
          description: Internal Server Error

  /api/create-order/{pk}:
    get:
      summary: Get a car to place an order
      parameters:
        - in: query
          name: limit
          required: false
          description: The number of items to return
          schema:
            type: integer
      responses:
        '200':
          description: A successful response
          content:
            application/json:
              example:
                - id: 1
                  name: SomeTypeCar
                  brand: SomeBrand
                  price: 70000
        '404':
          description: Car not found
          content:
            application/json:
              example:
                message: "Not found"
        '405':
          description: Incorrect method
        '500':
          description: Internal Server Error

    post:
      summary: Create order
      requestBody:
        required: true
        content:
          application/json:
            example:
              - id: 1
                name: 1
                color: SomeColor
                year: 2024
                image: "https://example.s3.amazonaws.com"

      responses:
        "201":
          description: A successful response
          content:
            application/json:
              example:
                "message": "Car was added to your cart"
        '400':
          description: Bad Request
          content:
            application/json:
              example:
                message: "Request body must be JSON or All fields are required"
        '405':
          description: Incorrect method
        '500':
          description: Internal Server Error

  /api/cart:
    get:
      summary: Get cart contents
      responses:
        '200':
          description: A successful response
          content:
            application/json:
              example:
                - id: 1
                  name: SomeTypeCar
                  brand: SomeBrand
                  price: 70000
        '405':
          description: Incorrect method
        '500':
          description: Internal Server Error

  /api/cart/{pk}:
    get:
      summary: Get cart contents
      responses:
        '200':
          description: A successful response
          content:
            application/json:
              example:
                - id: 1
                  name: SomeTypeCar
                  brand: SomeBrand
                  price: 70000
        '404':
          description: Order in car not found
          content:
            application/json:
              example:
                message: "Not found"
        '405':
          description: Incorrect method
        '500':
          description: Internal Server Error

    post:
      summary: Pay order
      parameters:
        - name: pk
          in: path
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: A successful response
          content:
            application/json:
              example:
                "message": "Order was successfully paid"
        '400':
          description: Bad Request
          content:
            application/json:
              example:
                message: "Request body must be JSON or All fields are required"
        '404':
          description: Order not found
          content:
            application/json:
              example:
                message: "Not found"

    delete:
      summary: Canceled order
      parameters:
        - name: pk
          in: path
          required: true
          schema:
            type: integer
      responses:
        "204":
          description: A successful response
          content:
            application/json:
              example:
                "message": "The order was successfully canceled"